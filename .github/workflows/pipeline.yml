name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install client dependencies
        run: npm install
        working-directory: bloglist/client

      - name: Check style
        run: npm run lint
        working-directory: bloglist/client

      - name: Build client
        run: npm run build
        working-directory: bloglist/client

      - name: Install server dependencies
        run: npm install
        working-directory: bloglist/server

      - name: Run server unit tests
        run: npm t
        working-directory: bloglist/server
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}

      - name: Setup end-to-end tests
        run: |
          npm ci
          npx playwright install --with-deps
        working-directory: bloglist/bloglist-e2e-tests

      - name: Start server
        run: npm start &
        working-directory: bloglist/server
        env:
          MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          PORT: 5173
          SECRET: ${{ secrets.SECRET }}

      - name: Wait for server to be ready
        run: npx wait-on http://localhost:5173

      - name: Run end-to-end tests
        run: npm t
        working-directory: bloglist/bloglist-e2e-tests
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}

      - name: Trigger deployment
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip') }}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  tag_release:
    needs: simple_deployment_pipeline
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.70.0
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      - name: Success notification
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'A new version has been built.'

      - name: Failure notification
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'Build has failed. Commit ${{ github.event.head_commit.url }} by ${{ github.event.head_commit.author.username }} broke the build.'
